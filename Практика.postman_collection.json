{
	"info": {
		"_postman_id": "9340eef6-2db6-45e4-ac0e-c4e1ba80e295",
		"name": "Практика",
		"description": "Описание API TAILORED_DAPI_MF-1.26.0\n\nContact Support:\n Name: CCM_Analyst; Natalia,Karaseva; Sergey,Lebedev\n Email: MF_IntBIS_Team@nexign.com",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Получение списка агентов (get)",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "b44c0efe-4022-478a-a9dc-e276a56a315d",
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Response time is less or equal 500ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(501);\r",
							"});\r",
							"pm.test(\"Content-Type is present\", function () {\r",
							"    pm.response.to.have.header(\"Content-Type\");\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "authToken",
						"type": "text",
						"value": "{{TestZoneToken}}"
					},
					{
						"key": "",
						"value": "",
						"type": "text",
						"disabled": true
					}
				],
				"url": {
					"raw": "{{TestZoneUrl}}/openapi/v1/agents",
					"host": [
						"{{TestZoneUrl}}"
					],
					"path": [
						"openapi",
						"v1",
						"agents"
					],
					"query": [
						{
							"key": "agentId",
							"value": "<integer>",
							"description": "Идентификатор агента.",
							"disabled": true
						},
						{
							"key": "agentName",
							"value": "<string>",
							"description": "Наименование агента. Поддерживается поиск по подстроке (нечеткий поиск).",
							"disabled": true
						},
						{
							"key": "agentContractNumber",
							"value": "<string>",
							"description": "Номер договора с агентом. Поддерживается поиск по подстроке (нечеткий поиск).",
							"disabled": true
						},
						{
							"key": "externalAgentId",
							"value": "<integer>",
							"description": "Идентификатор агента PRM (сквозной идентификатор агента).",
							"disabled": true
						},
						{
							"key": "agentBalanceTypeId",
							"value": "<integer>",
							"description": "Тип технологического счета агента, для которого выводится информация в списке балансов (agentBalances[]). @deprecate атрибут с версии BIS 8.17.0 и версии TAILORED_DAPI_MF 1.2.0.",
							"disabled": true
						},
						{
							"key": "serviceProviderCodes",
							"value": "<string>",
							"description": "Коды операторов связи. Необязательный с TAILORED_DAPI_MF 1.13.0.",
							"disabled": true
						},
						{
							"key": "serviceProviderCodes",
							"value": "<string>",
							"description": "Коды операторов связи. Необязательный с TAILORED_DAPI_MF 1.13.0.",
							"disabled": true
						}
					]
				},
				"description": "Получение списка агентов.\n\nФункция возвращает информацию по списку агентов, удовлетворяющих условиям фильтрации.\n\nПри выполнении фильтрации по наименованию агента либо номеру договора с агентом поддерживается поиск по \nподстроке. Чтобы выполнить поиск подстроки в строке (значение атрибута), искомая последовательность \nсимволов передается в фильтрующий атрибут совместно с символами % (например, %name%, %name, name%). \nВыполняется регистронезависимый поиск. \n\nАтрибут \"Тип технологического счета агента\" (agentBalanceTypeId) входного объекта помечен как @deprecate атрибут\nс версии BIS 8.17.0 и версии TAILORED_DAPI_MF 2.5.2:\n* при маршрутизации запроса на продукт BIS выполняется фильтрация списка балансов по указанному типу \nтехнологического счета агента;\n* при маршрутизации запроса на продукт TAILORED_DAPI_MF→CAM значение атрибута игнорируется.\n\nПри выполнении частичного запроса по атрибутам agentId, agentName, agentContractNumber, externalAgentId, \nвне зависимости от маршрутизации запроса, наличие роли OAPIAgentGet:ListWithBalances не требуется. \nПри маршрутизации запроса на продукт BIS, наличие роли OAPIAgentGet:ListWithBalances обязательно в случаях если:\n* частичный запрос атрибутов не используется;\n* выполняется частичный запрос атрибутов, включающих agentBalances.\n\nВ ответе функции возвращается успешный ответ (http статус 200 Ok) и пустой список, в случае если на вход функции\nпередается:\n* агент BIS (agentId), информация по которому отсутствует в CAM либо BIS;\n* агент PRM (externalAgentId), информация по которому отсутствует в CAM либо BIS.\n\nАтрибут \"Список с балансами технологического счета агента\" (agentBalances[]) выходного объекта помечен как \n@deprecate атрибут с версии BIS 8.17.0 и версии TAILORED_DAPI_MF 2.5.2:\n* при маршрутизации запроса на продукт BIS в атрибуте возвращается информация по балансам. При этом \n  при значении настроечного параметра BIS \"STOP_BALANCE\", равном 3 и больше, в выходном атрибуте \n  agentBalances[x].balance возвращается значение null и информация по атрибуту balance включается в заголовок \n  ответа ps-fields-failures;\n* при маршрутизации запроса на продукт TAILORED_DAPI_MF→CAM в атрибуте всегда возвращается пустой список \nбалансов (agentBalances[]).\n\nИнформация по оператору связи, к которому относится агент, возвращается только при маршрутизации запроса на \nпродукт TAILORED_DAPI_MF→CAM. При маршрутизации запроса на продукт BIS:\n* информация по оператору связи (serviceProvider) в выходном объекте не возвращается;\n* атрибут \"Коды операторов связи\" (serviceProviderCodes) входного объекта игнорируется.\n"
			},
			"response": [
				{
					"name": "Успешное выполнение.",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://srv3-sso-scc.net.billing.ru:47141/openapi/v1/agents?agentId=<integer>&agentName=<string>&agentContractNumber=<string>&externalAgentId=<integer>&agentBalanceTypeId=<integer>&serviceProviderCodes=<string>&serviceProviderCodes=<string>",
							"protocol": "http",
							"host": [
								"srv3-sso-scc",
								"net",
								"billing",
								"ru"
							],
							"port": "47141",
							"path": [
								"openapi",
								"v1",
								"agents"
							],
							"query": [
								{
									"key": "agentId",
									"value": "<integer>"
								},
								{
									"key": "agentName",
									"value": "<string>"
								},
								{
									"key": "agentContractNumber",
									"value": "<string>"
								},
								{
									"key": "externalAgentId",
									"value": "<integer>"
								},
								{
									"key": "agentBalanceTypeId",
									"value": "<integer>"
								},
								{
									"key": "serviceProviderCodes",
									"value": "<string>"
								},
								{
									"key": "serviceProviderCodes",
									"value": "<string>"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n \"items\": [\n  {\n   \"agentBalances\": [\n    {\n     \"agentBalanceType\": {\n      \"agentBalanceTypeId\": 27912564.26149933,\n      \"name\": \"Ut do officia anim\"\n     },\n     \"balance\": 82667979.46896297,\n     \"limit\": 99306085.70506495\n    },\n    {\n     \"agentBalanceType\": {\n      \"agentBalanceTypeId\": 44214388.53665808,\n      \"name\": \"nostrud ad\"\n     },\n     \"balance\": -40754312.78986099,\n     \"limit\": -43585470.25027884\n    }\n   ],\n   \"agentContractNumber\": \"tempor laboris\",\n   \"agentId\": 86731848.99218696,\n   \"agentName\": \"id reprehenderit occaecat incid\",\n   \"externalAgentId\": 42640499.441326916,\n   \"serviceProvider\": {\n    \"serviceProviderId\": 2127529,\n    \"code\": \"sed dolor pariatur\",\n    \"name\": \"enim ut in Lorem\"\n   }\n  },\n  {\n   \"agentBalances\": [\n    {\n     \"agentBalanceType\": {\n      \"agentBalanceTypeId\": 60006642.603378326,\n      \"name\": \"ea anim laboris\"\n     },\n     \"balance\": -69765115.0882371,\n     \"limit\": -96667794.66613859\n    },\n    {\n     \"agentBalanceType\": {\n      \"agentBalanceTypeId\": -44143328.62525945,\n      \"name\": \"irure aute sunt esse\"\n     },\n     \"balance\": 43396260.68171686,\n     \"limit\": -19101066.631120563\n    }\n   ],\n   \"agentContractNumber\": \"ea consectetur dolore\",\n   \"agentId\": 33804729.10397044,\n   \"agentName\": \"Ut labore eu\",\n   \"externalAgentId\": -18991627.558513448,\n   \"serviceProvider\": {\n    \"serviceProviderId\": 81807614,\n    \"code\": \"deserunt quis ullamco dolor\",\n    \"name\": \"fugiat consequat eu ut minim\"\n   }\n  }\n ],\n \"listInfo\": {\n  \"count\": 1,\n  \"limit\": 10,\n  \"offset\": 0\n }\n}"
				},
				{
					"name": "Bad Request.",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://srv3-sso-scc.net.billing.ru:47141/openapi/v1/agents?agentId=<integer>&agentName=<string>&agentContractNumber=<string>&externalAgentId=<integer>&agentBalanceTypeId=<integer>&serviceProviderCodes=<string>&serviceProviderCodes=<string>",
							"protocol": "http",
							"host": [
								"srv3-sso-scc",
								"net",
								"billing",
								"ru"
							],
							"port": "47141",
							"path": [
								"openapi",
								"v1",
								"agents"
							],
							"query": [
								{
									"key": "agentId",
									"value": "<integer>"
								},
								{
									"key": "agentName",
									"value": "<string>"
								},
								{
									"key": "agentContractNumber",
									"value": "<string>"
								},
								{
									"key": "externalAgentId",
									"value": "<integer>"
								},
								{
									"key": "agentBalanceTypeId",
									"value": "<integer>"
								},
								{
									"key": "serviceProviderCodes",
									"value": "<string>"
								},
								{
									"key": "serviceProviderCodes",
									"value": "<string>"
								}
							]
						}
					},
					"status": "Bad Request",
					"code": 400,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n \"errorCode\": \"BadRequest\",\n \"serviceName\": \"<код подсистемы>/<версия подсистемы>/<внутренний код сервиса>\",\n \"userMessage\": \"Parameter <parameterName*> parsing error\"\n}"
				},
				{
					"name": "InternalServerError.",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://srv3-sso-scc.net.billing.ru:47141/openapi/v1/agents?agentId=<integer>&agentName=<string>&agentContractNumber=<string>&externalAgentId=<integer>&agentBalanceTypeId=<integer>&serviceProviderCodes=<string>&serviceProviderCodes=<string>",
							"protocol": "http",
							"host": [
								"srv3-sso-scc",
								"net",
								"billing",
								"ru"
							],
							"port": "47141",
							"path": [
								"openapi",
								"v1",
								"agents"
							],
							"query": [
								{
									"key": "agentId",
									"value": "<integer>"
								},
								{
									"key": "agentName",
									"value": "<string>"
								},
								{
									"key": "agentContractNumber",
									"value": "<string>"
								},
								{
									"key": "externalAgentId",
									"value": "<integer>"
								},
								{
									"key": "agentBalanceTypeId",
									"value": "<integer>"
								},
								{
									"key": "serviceProviderCodes",
									"value": "<string>"
								},
								{
									"key": "serviceProviderCodes",
									"value": "<string>"
								}
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n \"errorCode\": \"consectetur sunt culpa Lorem\",\n \"serviceName\": \"quis reprehenderit dolor\",\n \"userMessage\": \"officia in nisi\",\n \"developerMessage\": \"commodo Lorem occaecat aliquip adipisicing\"\n}"
				},
				{
					"name": "Not authenticated.",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://srv3-sso-scc.net.billing.ru:47141/openapi/v1/agents?agentId=<integer>&agentName=<string>&agentContractNumber=<string>&externalAgentId=<integer>&agentBalanceTypeId=<integer>&serviceProviderCodes=<string>&serviceProviderCodes=<string>",
							"protocol": "http",
							"host": [
								"srv3-sso-scc",
								"net",
								"billing",
								"ru"
							],
							"port": "47141",
							"path": [
								"openapi",
								"v1",
								"agents"
							],
							"query": [
								{
									"key": "agentId",
									"value": "<integer>"
								},
								{
									"key": "agentName",
									"value": "<string>"
								},
								{
									"key": "agentContractNumber",
									"value": "<string>"
								},
								{
									"key": "externalAgentId",
									"value": "<integer>"
								},
								{
									"key": "agentBalanceTypeId",
									"value": "<integer>"
								},
								{
									"key": "serviceProviderCodes",
									"value": "<string>"
								},
								{
									"key": "serviceProviderCodes",
									"value": "<string>"
								}
							]
						}
					},
					"status": "Unauthorized",
					"code": 401,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n \"errorCode\": \"consectetur sunt culpa Lorem\",\n \"serviceName\": \"quis reprehenderit dolor\",\n \"userMessage\": \"officia in nisi\",\n \"developerMessage\": \"commodo Lorem occaecat aliquip adipisicing\"\n}"
				},
				{
					"name": "Forbidden.",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://srv3-sso-scc.net.billing.ru:47141/openapi/v1/agents?agentId=<integer>&agentName=<string>&agentContractNumber=<string>&externalAgentId=<integer>&agentBalanceTypeId=<integer>&serviceProviderCodes=<string>&serviceProviderCodes=<string>",
							"protocol": "http",
							"host": [
								"srv3-sso-scc",
								"net",
								"billing",
								"ru"
							],
							"port": "47141",
							"path": [
								"openapi",
								"v1",
								"agents"
							],
							"query": [
								{
									"key": "agentId",
									"value": "<integer>"
								},
								{
									"key": "agentName",
									"value": "<string>"
								},
								{
									"key": "agentContractNumber",
									"value": "<string>"
								},
								{
									"key": "externalAgentId",
									"value": "<integer>"
								},
								{
									"key": "agentBalanceTypeId",
									"value": "<integer>"
								},
								{
									"key": "serviceProviderCodes",
									"value": "<string>"
								},
								{
									"key": "serviceProviderCodes",
									"value": "<string>"
								}
							]
						}
					},
					"status": "Forbidden",
					"code": 403,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n \"errorCode\": \"consectetur sunt culpa Lorem\",\n \"serviceName\": \"quis reprehenderit dolor\",\n \"userMessage\": \"officia in nisi\",\n \"developerMessage\": \"commodo Lorem occaecat aliquip adipisicing\"\n}"
				}
			]
		},
		{
			"name": "Получение списка ТП с учетом типа нумерации.",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "01e0640c-bd99-42b1-b979-c01691423cbf",
						"exec": [
							"pm.test(\"Response time is less than 201ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(201);\r",
							"});\r",
							"pm.test(\"Content-Type is present\", function () {\r",
							"    pm.response.to.have.header(\"Content-Type\");\r",
							"});\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "authToken",
						"value": "{{TestZoneToken}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{TestZoneUrl}}/openapi/v1/dictionaries/common/ratePlans?limit=500",
					"host": [
						"{{TestZoneUrl}}"
					],
					"path": [
						"openapi",
						"v1",
						"dictionaries",
						"common",
						"ratePlans"
					],
					"query": [
						{
							"key": "numberTypeId",
							"value": "<long>",
							"description": "Фильтр по идентификатору типа нумерации.",
							"disabled": true
						},
						{
							"key": "numberTypeName",
							"value": "<long>",
							"description": "Фильтр по наименованию типа нумерации с поддержкой нечёткого поиска.",
							"disabled": true
						},
						{
							"key": "standardId",
							"value": "<long>",
							"description": "Фильтр по идентификатору стандартов связи.",
							"disabled": true
						},
						{
							"key": "ratePlanId",
							"value": "<long>",
							"description": "Фильтр по идентификатору ТП.",
							"disabled": true
						},
						{
							"key": "ratePlanName",
							"value": "<long>",
							"description": "Фильтр по наименованию ТП с поддержкой нечёткого поиска.",
							"disabled": true
						},
						{
							"key": "customerCategoryId",
							"value": "<long>",
							"description": "Фильтр по идентификатору категории клиента.",
							"disabled": true
						},
						{
							"key": "customerTypeId",
							"value": "<long>",
							"description": "Фильтр по идентификатору типа клиента.",
							"disabled": true
						},
						{
							"key": "numberCategoryId",
							"value": "<long>",
							"description": "Фильтр по идентификатору категории нумерации. Если значение не задано, значение по умолчанию = 1 (Телефония).",
							"disabled": true
						},
						{
							"key": "packId",
							"value": "<long>",
							"description": "Фильтр по идентификатору пакета.",
							"disabled": true
						},
						{
							"key": "customerProfileId",
							"value": "<long>",
							"description": "Идентификатор профиля клиента (необязательный).",
							"disabled": true
						},
						{
							"key": "limit",
							"value": "500"
						}
					]
				},
				"description": "Функция возвращает информацию о тарифных планах на sysdate."
			},
			"response": [
				{
					"name": "Коллекция объектов ratePlan класса RatePlanInfo.",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://srv3-sso-scc.net.billing.ru:47141/openapi/v1/dictionaries/common/ratePlans?numberTypeId=<long>&numberTypeName=<long>&standardId=<long>&ratePlanId=<long>&ratePlanName=<long>&customerCategoryId=<long>&customerTypeId=<long>&numberCategoryId=<long>&packId=<long>&customerProfileId=<long>",
							"protocol": "http",
							"host": [
								"srv3-sso-scc",
								"net",
								"billing",
								"ru"
							],
							"port": "47141",
							"path": [
								"openapi",
								"v1",
								"dictionaries",
								"common",
								"ratePlans"
							],
							"query": [
								{
									"key": "numberTypeId",
									"value": "<long>"
								},
								{
									"key": "numberTypeName",
									"value": "<long>"
								},
								{
									"key": "standardId",
									"value": "<long>"
								},
								{
									"key": "ratePlanId",
									"value": "<long>"
								},
								{
									"key": "ratePlanName",
									"value": "<long>"
								},
								{
									"key": "customerCategoryId",
									"value": "<long>"
								},
								{
									"key": "customerTypeId",
									"value": "<long>"
								},
								{
									"key": "numberCategoryId",
									"value": "<long>"
								},
								{
									"key": "packId",
									"value": "<long>"
								},
								{
									"key": "customerProfileId",
									"value": "<long>"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "[\n {\n  \"items\": [\n   {\n    \"name\": \"eu\",\n    \"numberTypes\": [\n     {\n      \"name\": \"e\",\n      \"numberTypeId\": 13127680,\n      \"standard\": {\n       \"name\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"standardId\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      }\n     },\n     {\n      \"name\": \"\",\n      \"numberTypeId\": 37861923,\n      \"standard\": {\n       \"name\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"standardId\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      }\n     }\n    ],\n    \"ratePlanId\": -49161711\n   },\n   {\n    \"name\": \"quis est\",\n    \"numberTypes\": [\n     {\n      \"name\": \"te\",\n      \"numberTypeId\": -5027033,\n      \"standard\": {\n       \"name\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"standardId\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      }\n     },\n     {\n      \"name\": \"m\",\n      \"numberTypeId\": 35025666,\n      \"standard\": {\n       \"name\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"standardId\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      }\n     }\n    ],\n    \"ratePlanId\": -64033805\n   }\n  ],\n  \"listInfo\": {\n   \"count\": 1,\n   \"limit\": 10,\n   \"offset\": 0,\n   \"pagingState\": \"MagicString\"\n  }\n },\n {\n  \"items\": [\n   {\n    \"name\": \"eiusmod quis\",\n    \"numberTypes\": [\n     {\n      \"name\": \"lab\",\n      \"numberTypeId\": 79762811,\n      \"standard\": {\n       \"name\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"standardId\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      }\n     },\n     {\n      \"name\": \"q\",\n      \"numberTypeId\": 44873844,\n      \"standard\": {\n       \"name\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"standardId\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      }\n     }\n    ],\n    \"ratePlanId\": -86380033\n   },\n   {\n    \"name\": \"anim ad aliqua nulla\",\n    \"numberTypes\": [\n     {\n      \"name\": \"nu\",\n      \"numberTypeId\": -10224926,\n      \"standard\": {\n       \"name\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"standardId\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      }\n     },\n     {\n      \"name\": \"esse\",\n      \"numberTypeId\": 35304163,\n      \"standard\": {\n       \"name\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       \"standardId\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      }\n     }\n    ],\n    \"ratePlanId\": -64703550\n   }\n  ],\n  \"listInfo\": {\n   \"count\": 1,\n   \"limit\": 10,\n   \"offset\": 0,\n   \"pagingState\": \"MagicString\"\n  }\n }\n]"
				}
			]
		},
		{
			"name": "Получение всех типов корректировок",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "26665e38-0522-41ee-a584-4522335f1fe4",
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Response time is less than 51ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(51);\r",
							"});\r",
							"pm.test(\"Content-Type is present\", function () {\r",
							"    pm.response.to.have.header(\"Content-Type\");\r",
							"});\r",
							"\r",
							"var schema = {\r",
							"    \"type\": \"object\",\r",
							"    \"required\": [\r",
							"        \"listInfo\",\r",
							"        \"items\"\r",
							"    ],\r",
							"    \"properties\": {\r",
							"        \"listInfo\": {\r",
							"            \"type\": \"null\",\r",
							"            \"default\": null\r",
							"        },\r",
							"        \"items\": {\r",
							"            \"type\": \"array\",\r",
							"            \"items\": {\r",
							"                \"type\": \"object\",\r",
							"                \"required\": [\r",
							"                    \"adjustmentTypeId\",\r",
							"                    \"name\"\r",
							"                ],\r",
							"                \"properties\": {\r",
							"                    \"adjustmentTypeId\": {\r",
							"                        \"type\": \"integer\",\r",
							"                        \"title\": \"The adjustmentTypeId Schema\"\r",
							"                    },\r",
							"                    \"name\": {\r",
							"                        \"type\": \"string\",\r",
							"                        \"title\": \"The name Schema\"\r",
							"                    }\r",
							"                }\r",
							"            }\r",
							"        }\r",
							"    }\r",
							"}\r",
							"\r",
							"pm.test('Schema validation', () => {\r",
							"    pm.response.to.have.jsonSchema (schema);\r",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "authToken",
						"value": "{{TestZoneToken}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{TestZoneUrl}}/openapi/v1/dictionaries/adjustments/adjustmentTypes",
					"host": [
						"{{TestZoneUrl}}"
					],
					"path": [
						"openapi",
						"v1",
						"dictionaries",
						"adjustments",
						"adjustmentTypes"
					],
					"query": [
						{
							"key": "name",
							"value": "<string>",
							"description": "Наименование типа для нечеткого поиска.",
							"disabled": true
						}
					]
				},
				"description": "Cписок всех типов корректировок.\n\nСортировка по умолчанию - по наименованию (name).\n"
			},
			"response": [
				{
					"name": "Untitled Response",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://srv3-{{server}}:47555/openapi/v1/dictionaries/adjustments/adjustmentTypes?name=<string>",
							"protocol": "https",
							"host": [
								"srv3-{{server}}"
							],
							"port": "47555",
							"path": [
								"openapi",
								"v1",
								"dictionaries",
								"adjustments",
								"adjustmentTypes"
							],
							"query": [
								{
									"key": "name",
									"value": "<string>"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n \"items\": [\n  {\n   \"adjustmentTypeId\": -25558506,\n   \"name\": \"ut\"\n  },\n  {\n   \"adjustmentTypeId\": 83865899,\n   \"name\": \"cil\"\n  }\n ],\n \"listInfo\": {\n  \"count\": 1,\n  \"limit\": 10,\n  \"offset\": 0,\n  \"pagingState\": \"MagicString\"\n }\n}"
				}
			]
		}
	],
	"auth": {
		"type": "bearer"
	},
	"variable": [
		{
			"id": "server",
			"key": "server",
			"value": "server-name",
			"type": "any",
			"description": {
				"content": "",
				"type": "text/plain"
			}
		},
		{
			"id": "baseUrl",
			"key": "baseUrl",
			"value": "http://srv3-sso-scc.net.billing.ru:47141",
			"type": "string"
		}
	],
	"protocolProfileBehavior": {}
}